dayjs() for current day running on a setInterval every second

for 8 < i < 17 generate blocks, format as hours

let hour = dayjs().hour
if current time hour = block, color red, if current time is > block, color gray, if current time hour is < block, color green

textarea when clicked (addeventlistener, or onclick) can add textContent
	research textarea html

when save button is clicked(run save to local storage function)

set the textarea to display from local storage so it’s never erased





for (var i = dayjs().hour(9); i < dayjs().hour(17);  i++) {
    let block = $('time-block')
    block.addClass('present')
}
	
$.each ( “.time-block” ) ( function () {

document.body.container






/////////ORIGINAL HTML///////////////
<!-- Use class for "past", "present", and "future" to apply styles to the
        time-block divs accordingly. The javascript will need to do this by
        adding/removing these classes on each div by comparing the hour in the
        id to the current hour. The html provided below is meant to be an example
        demonstrating how the css provided can be leveraged to create the
        desired layout and colors. The html below should be removed or updated
        in the finished product. Remember to delete this comment once the
        code is implemented.
        -->
    <!-- <div id="" class="row time-block">
      <div class="col-2 col-md-1 hour text-center py-3"></div>
      <textarea class="col-8 col-md-10 description" rows="3"> </textarea>
      <button class="btn saveBtn col-2 col-md-1" aria-label="save">
        <i class="fas fa-save" aria-hidden="true"></i>
      </button>
    </div> -->
    <!-- Example of a past time block. The "past" class adds a gray background color. -->



    <!-- <div id="hour-9" class="row time-block past">
      <div class="col-2 col-md-1 hour text-center py-3">
      9AM
      </div>

      <textarea class="col-8 col-md-10 description" rows="3"> </textarea>

      <button class="btn saveBtn col-2 col-md-1" aria-label="save">

        <i class="fas fa-save" aria-hidden="true"></i>

      </button>

    </div> -->





    <!-- Example of a a present time block. The "present" class adds a red background color. -->
    <!-- <div id="hour-10" class="row time-block present">
      <div class="col-2 col-md-1 hour text-center py-3">10AM</div>
      <textarea class="col-8 col-md-10 description" rows="3"> </textarea>
      <button class="btn saveBtn col-2 col-md-1" aria-label="save">
        <i class="fas fa-save" aria-hidden="true"></i>
      </button>
    </div> -->

    <!-- Example of a future time block. The "future" class adds a green background color. -->
    <!-- <div id="hour-11" class="row time-block future">
      <div class="col-2 col-md-1 hour text-center py-3">11AM</div>
      <textarea class="col-8 col-md-10 description" rows="3"> </textarea>
      <button class="btn saveBtn col-2 col-md-1" aria-label="save">
        <i class="fas fa-save" aria-hidden="true"></i>
      </button>
    </div> -->



    //////// Function to Generate Blocks /////////

    function generateBlocks() {
  for (var i = 9; i < 17; i++) {
    //iterate through to create time blocks
    let blockEl = $('<div id="" class="row time-block">');
    containerEl.append(blockEl[0]);

    // iterate through to format each time block
    let divEl = $('<div class="col-2 col-md-1 hour text-center py-3"></div>');
    let textAreaEl = $('<textarea class="col-8 col-md-10 description" rows="3"></textarea>');
    let buttonEl = $('<button class="btn saveBtn col-2 col-md-1" aria-label="save"><i class="fas fa-save" aria-hidden="true"></i></button>');

    $(blockEl).append(divEl, textAreaEl, buttonEl);

    let index = i
    let hour = dayjs(rightnow).hour();
    // console.log(hour);
  }
}

// TODO: Add a listener for click events on the save button. This code should
  // use the id in the containing time-block as a key to save the user input in
  // local storage. HINT: What does `this` reference in the click listener
  // function? How can DOM traversal be used to get the "hour-x" id of the
  // time-block containing the button that was clicked? How might the id be
  // useful when saving the description in local storage?
  //
  // TODO: Add code to apply the past, present, or future class to each time
  // block by comparing the id to the current hour. HINTS: How can the id
  // attribute of each time-block be used to conditionally add or remove the
  // past, present, and future classes? How can Day.js be used to get the
  // current hour in 24-hour time?
  //
  // TODO: Add code to get any user input that was saved in localStorage and set
  // the values of the corresponding textarea elements. HINT: How can the id
  // attribute of each time-block be used to do this?
  //
  // TODO: Add code to display the current date in the header of the page.